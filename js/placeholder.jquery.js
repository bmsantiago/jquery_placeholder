// Generated by CoffeeScript 1.6.2
/*
Author: bmsantiago

Placeholder plugin for IE <= 9
*/


(function() {
  var $, browser, match, ua;

  $ = jQuery;

  ua = navigator.userAgent.toLowerCase();

  match = /(msie) ([\w.]+)/.exec(ua) || [];

  browser = {
    name: match[1] || "",
    version: match[2] || "0"
  };

  $.fn.extend({
    placeholder: function(options) {
      var _defaults;

      _defaults = {
        "fontColor": "#999",
        "class": "",
        "styles": ""
      };
      options = $.extend(_defaults, options);
      if (!('placeholder' in document.createElement('input'))) {
        return $(this).each(function(index) {
          var $cur_input, $span, extraTop, placeholder, spanCSS, spanMarginLeft;

          $cur_input = $(this);
          placeholder = $cur_input.attr('placeholder');
          if ((placeholder != null) && ($(this).is('input:text') || $(this).is('input:password'))) {
            $cur_input.attr("data-jqph-at", index);
            $cur_input.addClass("jqph-input");
            if ($cur_input.css("margin") === "auto") {
              $cur_input.css("margin", "0");
            }
            spanMarginLeft = 0;
            if ($cur_input.css("margin-left") !== "auto") {
              spanMarginLeft = parseInt($cur_input.css('margin-left').replace("px", ""));
            }
            extraTop = 0;
            if (browser.name = 'msie' && browser.version === '9.0') {
              extraTop = 4;
            }
            spanCSS = {
              "top": $cur_input.position().top + extraTop,
              "left": $cur_input.position().left + spanMarginLeft,
              "width": $cur_input.width(),
              "height": $cur_input.height(),
              "padding": $cur_input.css('padding'),
              "padding-left": parseInt($cur_input.css('padding-left').replace("px", "")) + 2,
              "font-family": $cur_input.css('font-family'),
              "font-size": $cur_input.css('font-size'),
              "line-height": $cur_input.css('height'),
              "color": options.fontColor,
              "position": "absolute"
            };
            $span = $('<span></span>').hide();
            $span.attr("data-jqph-at", index);
            $span.addClass("jqph_span");
            $span.css(spanCSS);
            $span.css(options.styles);
            $span.html(placeholder);
            $span.addClass(options["class"]);
            $span.appendTo($('body'));
            if ($cur_input.val() === "") {
              $span.show();
            }
            $span.on("click", function(e) {
              var $input;

              e.stopPropagation();
              $input = $(".jqph-input:eq(" + ($(this).data('jqph-at')) + ")");
              return $input.focus();
            });
            $span.on("selectstart", function() {
              return false;
            });
            $cur_input.on('focusout', function(e) {
              e.stopPropagation();
              if ($(this).val() === "") {
                return $(".jqph_span:eq(" + ($(this).data('jqph-at')) + ")").show();
              }
            });
            $cur_input.on('keydown', function(e) {
              var charsBlocked;

              e.stopPropagation();
              if ($(this).val() === "") {
                charsBlocked = [37, 38, 39, 40];
                if ($.inArray(e.keyCode, charsBlocked) !== -1) {
                  return false;
                }
              }
              return $(".jqph_span:eq(" + ($(this).data('jqph-at')) + ")").hide();
            });
            return $cur_input.on('keyup', function(e) {
              var charsBlocked;

              e.stopPropagation();
              if ($(this).val() === "") {
                if ($(this).val() === "") {
                  charsBlocked = [37, 38, 39, 40];
                  if ($.inArray(e.keyCode, charsBlocked) !== -1) {
                    return false;
                  }
                }
                return $(".jqph_span:eq(" + ($(this).data('jqph-at')) + ")").show();
              } else {
                return $(".jqph_span:eq(" + ($(this).data('jqph-at')) + ")").hide();
              }
            });
          }
        });
      }
    }
  });

}).call(this);
